* Rust算法
 本项目收集包含一些rust编写的算法和小程序.
 本项目附带了每种算法的逐步分析 并且会逐步完善数学分析

** 目录
*** 1.  [[./insert_insort.rs][插入排序]]
**** 分步分析
#+begin_src
array:   5 2 4 6 1 3 8 0
   index = 1 , arr[index] = 2 , 5 > 2 , swap 5 and 2 , -> 2 5 4 ...
   index = 2 , arr[index] = 4 , 5 > 4 , swap 4 and 5 , -> 2 4 5 ...
   ...
   -> 1 2 3 4 5 6 8 0 ;  index = len - 1 , arr[index] = 0 ,  8 > 0, swap 8 and 0 , -> 1 2 3 4 5 6 0 8 , 6 > 0 .... ,-> 0 1 2 3 4 5 6 8 
#+end_src
**** TODO 插入排序数学分析
*** 2.  [[./linearity_find.rs][线性查找]]
**** TODO 线性查找数学分析
*** 3.  [[./select_insort.rs][选择排序]]
**** TODO 选择排序数学分析
*** 4.  [[./merge_insort.rs][分治排序]]
**** TODO 分治排序数学分析
*** 5.  [[./mid_find.rs][二分查找]]
**** TODO 二分查找数学分析
*** 6.  [[./bubble_sort.rs][冒泡排序]]
**** TODO 冒泡排序数学分析
*** 7.  [[./sum_find.rs][和匹配]]
**** TODO 和匹配数学分析
*** 8.  [[./rude_max_subarray.rs][暴力最大字数组]]
**** 分步分析
#+begin_src 
array: 13 -3 -25 20 -3 -16 -23 18
index: 0  1  2   3   4 5   6   7
{
i = 0
sum =  13 10 -12 8   5  -11 -34 -16
max =  13 13 13  13  13 13  13  13
}

{
i = 1
sum =     -3 -28 -8  -5 -21 -44 -26
max =     -3 -3  -3  -3 -3  -3   -3
}
#+end_src
**** TODO 数学分析
*** 9.  [[./merge_max_subarray.rs][分治最大子数组]]
**** TODO 数学分析

*** 10. [[./square_matrix_multiply.rs][一般方阵乘法]]
** 运行
#+begin_src shell
  cargo build 
#+end_src
