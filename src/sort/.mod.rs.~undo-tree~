(undo-tree-save-format-version . 1)
"0e3189f53528280639aad96273e5ccf15a884015"
[nil nil nil nil (26030 34400 538629 788000) 0 nil]
([nil nil ((#("pub use self::heap::max as max_heapify;" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 12 (face font-lock-keyword-face fontified t) 12 14 (fontified t) 14 18 (face font-lock-constant-face fontified t) 18 24 (fontified t) 24 26 (face font-lock-keyword-face fontified t) 26 39 (fontified t)) . 395) (t 26029 9051 170792 535000)) nil (26030 34400 538629 66000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 395)) nil (26030 34400 538628 149000) 0 nil])
([nil nil ((#("pub use self::heap::build_max as build_max_heap;" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 12 (face font-lock-keyword-face fontified t) 12 14 (fontified t) 14 18 (face font-lock-constant-face fontified t) 18 30 (fontified t) 30 32 (face font-lock-keyword-face fontified t) 32 48 (fontified t)) . 395)) nil (26030 34400 538627 644000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 395)) nil (26030 34400 538626 995000) 0 nil])
([nil nil ((#("pub use self::heap::min as min_heapify;" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 12 (face font-lock-keyword-face fontified t) 12 14 (fontified t) 14 18 (face font-lock-constant-face fontified t) 18 24 (fontified t) 24 26 (face font-lock-keyword-face fontified t) 26 39 (fontified t)) . 395)) nil (26030 34400 538626 558000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 395)) nil (26030 34400 538625 986000) 0 nil])
([nil nil ((#("pub use self::heap::build_min as build_min_heap;" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 12 (face font-lock-keyword-face fontified t) 12 14 (fontified t) 14 18 (face font-lock-constant-face fontified t) 18 30 (fontified t) 30 32 (face font-lock-keyword-face fontified t) 32 48 (fontified t)) . 395)) nil (26030 34400 538625 525000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 395)) nil (26030 34400 538625 24000) 0 nil])
([nil nil ((75 . 76) (t 26029 9972 116466 324000)) nil (26030 34400 538624 499000) 0 nil])
([nil nil ((76 . 81)) nil (26030 34400 538624 43000) 0 nil])
([nil nil ((81 . 85)) nil (26030 34400 538623 580000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-constant-face fontified t)) . -82) (undo-tree-id26 . -1) (#("i" 0 1 (face font-lock-constant-face fontified t)) . -83) (undo-tree-id27 . -1) (#("k" 0 1 (face font-lock-constant-face fontified t)) . -84) (undo-tree-id28 . -1) 85) nil (26030 34400 538622 840000) 0 nil])
([nil nil ((82 . 85)) nil (26030 34400 538620 745000) 0 nil])
([nil nil ((80 . 89) (#("quick" 0 5 (face font-lock-constant-face fontified t)) . -80) (undo-tree-id24 . -5) (undo-tree-id25 . -5) 85) nil (26030 34400 538620 101000) 0 nil])
([nil nil ((89 . 90)) nil (26030 34400 538618 710000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -410) (undo-tree-id23 . -1) 411 (t 26030 34055 299008 921000)) nil (26030 34400 538618 158000) 0 nil])
([nil nil ((410 . 425)) nil (26030 34400 538617 79000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -424) (undo-tree-id22 . -1) 425) nil (26030 34400 538616 457000) 0 nil])
([nil nil ((424 . 427)) nil (26030 34400 538615 412000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -426) (undo-tree-id21 . -1) 427) nil (26030 34400 538614 854000) 0 nil])
([nil nil ((426 . 429)) nil (26030 34400 538613 554000) 0 nil])
([nil nil ((424 . 433) (#("quick" 0 5 (fontified t)) . -424) (undo-tree-id19 . -5) (undo-tree-id20 . -5) 429) nil (26030 34400 538612 946000) 0 nil])
([nil nil ((433 . 438)) nil (26030 34400 538611 537000) 0 nil])
([nil nil ((435 . 445) (#("_qu" 0 3 (fontified t)) . -435) (undo-tree-id17 . -3) (undo-tree-id18 . -3) 438) nil (26030 34400 538610 925000) 0 nil])
([nil nil ((445 . 454)) nil (26030 34400 538609 426000) 0 nil])
([nil nil ((449 . 458) (#("quick" 0 5 (fontified t)) . -449) (undo-tree-id15 . -5) (undo-tree-id16 . -5) 454) nil (26030 34400 538608 725000) 0 nil])
([nil nil ((458 . 459)) nil (26030 34400 538607 237000) 0 nil])
([nil nil ((459 . 460)) nil (26030 34400 538606 817000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 435) (t 26030 34070 302108 869000)) nil (26030 34400 538606 351000) 0 nil])
([nil nil ((76 . 395) (#("mod quicksort;
pub use self::insertion::sort as insertion_sort;
pub use self::binary::sort as binary_sort;
pub use self::bubble::sort as bubble_sort;
pub use self::selection::sort as selection_sort;
pub use self::merge::sort as merge_sort;
pub use self::heap::max_sort as heap_max_sort;
pub use self::heap::min_sort as heap_min_sort;
pub use self::quicksort::quicksort as quicksort;" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 13 (face font-lock-constant-face fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 18 (face font-lock-keyword-face fontified t) 18 19 (fontified t) 19 22 (face font-lock-keyword-face fontified t) 22 23 (fontified t) 23 27 (face font-lock-keyword-face fontified t) 27 29 (fontified t) 29 38 (face font-lock-constant-face fontified t) 38 45 (fontified t) 45 47 (face font-lock-keyword-face fontified t) 47 64 (fontified t) 64 67 (face font-lock-keyword-face fontified t) 67 68 (fontified t) 68 71 (face font-lock-keyword-face fontified t) 71 72 (fontified t) 72 76 (face font-lock-keyword-face fontified t) 76 78 (fontified t) 78 84 (face font-lock-constant-face fontified t) 84 91 (fontified t) 91 93 (face font-lock-keyword-face fontified t) 93 107 (fontified t) 107 110 (face font-lock-keyword-face fontified t) 110 111 (fontified t) 111 114 (face font-lock-keyword-face fontified t) 114 115 (fontified t) 115 119 (face font-lock-keyword-face fontified t) 119 121 (fontified t) 121 127 (face font-lock-constant-face fontified t) 127 134 (fontified t) 134 136 (face font-lock-keyword-face fontified t) 136 150 (fontified t) 150 153 (face font-lock-keyword-face fontified t) 153 154 (fontified t) 154 157 (face font-lock-keyword-face fontified t) 157 158 (fontified t) 158 162 (face font-lock-keyword-face fontified t) 162 164 (fontified t) 164 173 (face font-lock-constant-face fontified t) 173 180 (fontified t) 180 182 (face font-lock-keyword-face fontified t) 182 199 (fontified t) 199 202 (face font-lock-keyword-face fontified t) 202 203 (fontified t) 203 206 (face font-lock-keyword-face fontified t) 206 207 (fontified t) 207 211 (face font-lock-keyword-face fontified t) 211 213 (fontified t) 213 218 (face font-lock-constant-face fontified t) 218 225 (fontified t) 225 227 (face font-lock-keyword-face fontified t) 227 240 (fontified t) 240 243 (face font-lock-keyword-face fontified t) 243 244 (fontified t) 244 247 (face font-lock-keyword-face fontified t) 247 248 (fontified t) 248 252 (face font-lock-keyword-face fontified t) 252 254 (fontified t) 254 258 (face font-lock-constant-face fontified t) 258 269 (fontified t) 269 271 (face font-lock-keyword-face fontified t) 271 287 (fontified t) 287 290 (face font-lock-keyword-face fontified t) 290 291 (fontified t) 291 294 (face font-lock-keyword-face fontified t) 294 295 (fontified t) 295 299 (face font-lock-keyword-face fontified t) 299 301 (fontified t) 301 305 (face font-lock-constant-face fontified t) 305 316 (fontified t) 316 318 (face font-lock-keyword-face fontified t) 318 334 (fontified t) 334 337 (face font-lock-keyword-face fontified t) 337 338 (fontified t) 338 341 (face font-lock-keyword-face fontified t) 341 342 (fontified t) 342 346 (face font-lock-keyword-face fontified t) 346 348 (fontified t) 348 357 (face font-lock-constant-face fontified t) 357 359 (fontified t) 359 369 (fontified t) 369 371 (face font-lock-keyword-face fontified t) 371 372 (fontified t) 372 382 (fontified t)) . 76) (undo-tree-id9 . -199) (undo-tree-id10 . -14) (undo-tree-id11 . -199) (undo-tree-id12 . -199) (undo-tree-id13 . -359) (undo-tree-id14 . -359) (t 26030 34103 448259 919000)) nil (26030 34400 538605 648000) 0 nil])
([nil nil ((394 . 395) (t 26030 34226 233016 564000)) nil (26030 34400 538602 347000) 0 nil])
([nil nil ((395 . 414)) nil (26030 34400 538601 854000) 0 nil])
([nil nil ((409 . 418) (#("quick" 0 5 (fontified t)) . -409) (undo-tree-id7 . -5) (undo-tree-id8 . -5) 414) nil (26030 34400 538601 292000) 0 nil])
([nil nil ((418 . 423)) nil (26030 34400 538600 7000) 0 nil])
([nil nil ((420 . 429) (#("qui" 0 3 (fontified t)) . -420) (undo-tree-id6 . -3) 423) nil (26030 34400 538599 563000) 0 nil])
([nil nil ((429 . 435)) nil (26030 34400 538598 421000) 0 nil])
([nil nil ((433 . 442) (#("qu" 0 2 (fontified t)) . -433) (undo-tree-id4 . -2) (undo-tree-id5 . -2) 435) nil (26030 34400 538597 791000) 0 nil])
([nil nil ((442 . 443)) nil (26030 34400 538596 261000) 0 nil])
([nil nil ((75 . 76) (t 26030 34304 528465 277000)) nil (26030 34400 538595 822000) 0 nil])
([nil nil ((76 . 82)) nil (26030 34400 538595 14000) 0 nil])
([nil nil ((80 . 89) (#("qu" 0 2 (face font-lock-constant-face fontified t)) . -80) (undo-tree-id0 . -2) (undo-tree-id1 . -2) (undo-tree-id2 . -2) (undo-tree-id3 . -2) 82) nil (26030 34400 538593 544000) 0 nil])
([nil current ((89 . 90)) nil (26030 34400 538577 812000) 0 nil])
nil
